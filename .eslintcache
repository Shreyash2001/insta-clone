[{"E:\\Web Development\\instagram_clone\\server\\client\\src\\index.js":"1","E:\\Web Development\\instagram_clone\\server\\client\\src\\reportWebVitals.js":"2","E:\\Web Development\\instagram_clone\\server\\client\\src\\App.js":"3","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\Navbar.js":"4","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Signup.js":"5","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Home.js":"6","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Signin.js":"7","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Profile.js":"8","E:\\Web Development\\instagram_clone\\server\\client\\src\\reducers\\userReducer.js":"9","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\CreatePost.js":"10","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\SubscribedUser.js":"11","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\UserProfile.js":"12","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Reset.js":"13","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\NewPassword.js":"14"},{"size":500,"mtime":499162500000,"results":"15","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":2060,"mtime":1610505767043,"results":"18","hashOfConfig":"16"},{"size":4496,"mtime":1610874034075,"results":"19","hashOfConfig":"16"},{"size":3503,"mtime":1610539992690,"results":"20","hashOfConfig":"16"},{"size":10822,"mtime":1610948575963,"results":"21","hashOfConfig":"16"},{"size":2505,"mtime":1610539797906,"results":"22","hashOfConfig":"16"},{"size":5028,"mtime":1610948365619,"results":"23","hashOfConfig":"16"},{"size":638,"mtime":1609556244199,"results":"24","hashOfConfig":"16"},{"size":2747,"mtime":1609502938747,"results":"25","hashOfConfig":"16"},{"size":9447,"mtime":1610280221723,"results":"26","hashOfConfig":"16"},{"size":5232,"mtime":1610945642742,"results":"27","hashOfConfig":"16"},{"size":1791,"mtime":1610505462723,"results":"28","hashOfConfig":"16"},{"size":1635,"mtime":1610507212147,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1g5vm4s",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"32"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"32"},"E:\\Web Development\\instagram_clone\\server\\client\\src\\index.js",[],["69","70"],"E:\\Web Development\\instagram_clone\\server\\client\\src\\reportWebVitals.js",[],"E:\\Web Development\\instagram_clone\\server\\client\\src\\App.js",["71","72"],"import React, {useEffect, createContext, useReducer, useContext} from 'react'\nimport Navbar from './components/Navbar';\nimport { BrowserRouter, Route, Switch, useHistory } from 'react-router-dom';\nimport Home from './components/screens/Home';\nimport Signup from './components/screens/Signup';\nimport Signin from './components/screens/Signin';\nimport Profile from './components/screens/Profile';\nimport CreatePost from './components/screens/CreatePost';\nimport UserProfile from './components/screens/UserProfile';\nimport SubscribedPosts from './components/screens/SubscribedUser';\nimport Reset from './components/screens/Reset';\nimport NewPassword from './components/screens/NewPassword';\nimport './App.css';\nimport {reducer, initialState} from './reducers/userReducer';\n\nexport const UserContext = createContext()\n\n\nconst Routing = () => {\n  const history = useHistory()\n  const {state, dispatch} = useContext(UserContext)\n  useEffect(()=>{\n    const user = JSON.parse(localStorage.getItem(\"user\"))\n    if(user){\n      dispatch({type:'USER', payload:user})\n    }else{\n      if(!history.location.pathname.startsWith('/reset'))\n           history.push('/signin')\n    }\n  },[])\n  return (\n    <Switch>\n    <Route exact path='/'>\n      <Home />\n    </Route>\n    <Route path='/signup'>\n      <Signup />\n    </Route>\n    <Route path='/signin'>\n      <Signin />\n    </Route>\n    <Route exact path='/profile'>\n      <Profile />\n    </Route>\n    <Route path='/create'>\n      <CreatePost />\n    </Route>\n    <Route path='/profile/:userid'>\n      <UserProfile />\n    </Route>\n    <Route path='/myFollowersPost'>\n      <SubscribedPosts />\n    </Route>\n    <Route exact path='/reset'>\n      <Reset />\n    </Route>\n    <Route path='/reset/:token'>\n      <NewPassword />\n    </Route>\n    </Switch>\n  )\n}\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    <UserContext.Provider value={{state, dispatch}}>\n    <BrowserRouter>\n    <Navbar />\n    <Routing />\n    </BrowserRouter>\n    </UserContext.Provider>\n  );\n}\n\nexport default App;\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\Navbar.js",[],"E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Signup.js",["73"],"import React, {useState, useEffect} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nfunction Signup() {\r\n    const history = useHistory();\r\n    const [name, setName] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n    const [image, setImage] = useState('');\r\n    const [url, setUrl] = useState(undefined);\r\n\r\n    useEffect(() => {\r\n        uploadFields()\r\n    }, [url])\r\n    const uploadPic = () => {\r\n        const data = new FormData()\r\n      data.append('file', image)\r\n      data.append('upload_preset', 'insta_clone')\r\n      data.append('cloud_name', 'cqn')\r\n\r\n      fetch('https://api.cloudinary.com/v1_1/cqn/image/upload', {\r\n        method: 'post',\r\n        body:data\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data => {\r\n        setUrl(data.url)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n    }\r\n\r\n    const uploadFields = () => {\r\n        if(!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            return M.toast({html: 'invalid email', classes: '#616161 grey darken-2'});\r\n        }\r\n        fetch('/signup', {\r\n            method: 'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                pic:url\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                M.toast({html: data.error, classes: '#616161 grey darken-2'})\r\n            }\r\n            else {\r\n                // M.toast({html: data.message, classes: '#616161 grey darken-2'})\r\n                history.push('/signin')\r\n            }\r\n            \r\n        })\r\n    }\r\n    const PostData = () => {\r\n        if(image){\r\n            uploadPic()\r\n        } else {\r\n            uploadFields()\r\n        }\r\n        \r\n    }\r\n    return (\r\n        <div className='my-gradient'>\r\n        <div className='myCard'>\r\n        <div className='card auth-card input-field'>\r\n        <h2>Instagram</h2>\r\n        <input \r\n            type='text'\r\n            placeholder=' Enter your name'\r\n            value = {name}\r\n            onChange = {(e) => setName(e.target.value)}\r\n        />\r\n        <input \r\n            type='text'\r\n            placeholder='Enter your email'\r\n            value = {email}\r\n            onChange = {(e) => setEmail(e.target.value)}\r\n        />\r\n        <input \r\n            type='password'\r\n            placeholder='password'\r\n            value = {password}\r\n            onChange = {(e) => setPassword(e.target.value)}\r\n        />\r\n        <div className=\"file-field input-field\">\r\n      <div className=\"btn #1976d2 blue darken-2\">\r\n        <span>Upload profile pic</span>\r\n        <input type=\"file\" \r\n          onChange={(e) => setImage(e.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate\" type=\"text\" />\r\n      </div>\r\n    </div>\r\n\r\n        <button\r\n        onClick = {() => PostData()}\r\n         className= 'btn waves-effect waves-light #1976d2 blue darken-2'>Sign Up</button>\r\n        <p><Link to='/signin'><u>Already have an account ?</u></Link></p>\r\n        </div>\r\n   </div>\r\n   </div>\r\n    )\r\n}\r\n\r\nexport default Signup\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Home.js",["74","75","76"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {UserContext} from '../../App'\r\nimport '../../App.css'\r\nimport M from 'materialize-css'\r\nimport Tippy from '@tippyjs/react';\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport 'tippy.js/themes/light.css';\r\nimport 'tippy.js/animations/shift-away.css';\r\n\r\n\r\nfunction Home() {\r\n    const [data, setData] = useState([])\r\n    const [url, setUrl] = useState('')\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const [loading, setLoading] = useState(true)\r\n\r\n    useEffect(() => {\r\n      setTimeout(() => setLoading(false), 6000)\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        fetch('/allPosts', {\r\n            headers: {\r\n                'Authorization' : 'Bearer '+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            setData(result.posts)\r\n        })\r\n    })\r\n   \r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n        //  console.log(result)\r\n        const newData = data.map(item => {\r\n            if(item._id === result._id){\r\n                return result\r\n            }else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n        //   console.log(data);\r\n        })\r\n  }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n        const newData = data.map(item => {\r\n            if(item._id === result._id){\r\n                return result\r\n            }else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n        })\r\n    }\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: 'put',\r\n            headers: {\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n              text,  \r\n              postId\r\n          })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            \r\n            if(result.errmessage){\r\n                M.toast({html: result.errmessage, classes:'#e53935 red darken-1'})\r\n            }\r\n            const newData = data.map(item => {\r\n                if(item._id === result._id){\r\n                    return result\r\n                }else {\r\n                    // console.log(item);\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletePost/${postid}`, {\r\n            method:'delete',\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              }\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            const newData = data.filter(item => {\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n    \r\n    const deleteComment = (postId, commentId) => {\r\n        fetch(`deleteComment/${postId}/${commentId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            const newData = data.map(item => {\r\n                if(item._id === result._id){\r\n                    return result\r\n                } else {\r\n                    return item\r\n                } \r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        <p className='message'>Please open in Desktop!!! Currently work going on Mobile view</p>\r\n<div className=\"demo\">\r\n        \r\n        {loading === false\r\n        ?\r\n        \r\n        <div className='home'>\r\n        {\r\n           \r\n            data.map(item => {\r\n                return (\r\n                    <div className='card home-card' key={item._id}>\r\n                <h5 style={{padding:'5px'}}><Link to={item.postedBy._id !== state._id ? '/profile/'+item.postedBy._id : '/profile'}>\r\n                    <div className='flex-container'>\r\n                <div className='flex-child'>\r\n                <img src={item.postedBy.pic} \r\n                style={{width:'65px', height:'65px', borderRadius:'60px'}} \r\n                alt='dp'>\r\n                </img>\r\n                </div>\r\n                <div className=\"flex-child\">\r\n                <h5>\r\n                {item.postedBy.name}\r\n                </h5>\r\n                </div>\r\n                </div>\r\n                </Link> {\r\n                    item.postedBy._id === state._id && <i className=\"material-icons\" style={{float:'right', cursor:'pointer', position: 'absolute', top: '10px', right: '10px'}}\r\n                    onClick={() => deletePost(item._id)}\r\n                    >delete</i>\r\n                } \r\n                </h5>\r\n                <div className='card-image'>\r\n                    <img src={item.photo} alt='home post'/>\r\n                </div>\r\n                <div className='card-content'>\r\n                {/* <i className=\"material-icons\"style={{color:'red'}}>favorite</i> */}\r\n                {\r\n                    (item.like.includes(state._id))\r\n                    ? <i className=\"material-icons small\"\r\n                onClick={() => {unlikePost(item._id)}}\r\n                style={{cursor:'pointer', color:'#ef4f4f'}}\r\n                >favorite</i>\r\n                : <i className=\"material-icons small\"\r\n                onClick={() => {likePost(item._id)}}\r\n                style={{cursor:'pointer', color:'#534e52'}}\r\n                >favorite_border</i>\r\n                }\r\n                \r\n                <h6>{item.like.length} likes</h6>\r\n                    <h6 style={{fontWeight:'800px'}}>{item.title}</h6>\r\n                    <p>{item.body}</p>\r\n                    <hr></hr>\r\n                    { \r\n                        item.comments.length === 0 ? <p style={{\r\n                         margin: '2px 5px 6px 138px',\r\n                         fontSize: '18px',\r\n                         fontWeight: '600px'\r\n                        }}>No comments yet</p> \r\n                         :\r\n                        item.comments.map(record => {\r\n                        \r\n                   return(\r\n                                <h6 key={record._id} className='comment-wrap'>\r\n                                \r\n                    <Link to={record.postedBy._id !== state._id ? '/profile/'+record.postedBy[0]._id : '/profile'}>\r\n                      <div style={{display:'flex'}}>\r\n                    <img alt='dp' \r\n                     src={record.picture} \r\n                     style={{width:'30px', height:'30px', borderRadius:'60px'}} >\r\n                     </img>\r\n                     <Tippy \r\n                                animation={'shift-away'} \r\n                                theme={'light'} \r\n                                // arrow={false}\r\n                                offset={[80, 5]}\r\n                                content={<div>\r\n                                <div style={{display:'flex'}}>\r\n                    <img alt='dp' \r\n                     src={record.picture} \r\n                     style={{width:'70px', height:'70px', borderRadius:'60px'}} >\r\n                     </img>\r\n                     \r\n                      <span style={{ fontWeight: \"600\", fontSize:'32px', margin:'4px 8px 0 10px' }}>\r\n                     {record.postedBy[0].name} \r\n                      </span>\r\n                      </div>\r\n                       <div style={{display:'flex', fontSize:'20px', fontWeight:'500px'}}>{record.followers} Followers \r\n                       {'   '}{record.following} Following</div>\r\n                                </div>\r\n                                }>\r\n\r\n                      <span style={{ fontWeight: \"600\", fontSize:'22px', margin:'4px 8px 0 10px' }}>\r\n                     {record.postedBy[0].name} \r\n                      </span>\r\n                      </Tippy>\r\n                      \r\n                      <p style={{margin:'5px 0px 0px 0px'}}>{record.text}</p>\r\n                       </div>\r\n                    </Link>\r\n  \r\n                        \r\n                      {(item.postedBy._id || record.postedBy._id) ===\r\n                        state._id && (\r\n                        <i\r\n                          className=\"material-icons\"\r\n                          style={{\r\n                            float: \"right\",\r\n                            color:'red',\r\n                            cursor:'pointer',\r\n                            margin:'-22px 0px 0px 0px'\r\n                          }}\r\n                          onClick={() => deleteComment(item._id, record._id)}\r\n                        >\r\n                          delete\r\n                        </i>\r\n                      )}\r\n                    </h6>\r\n                        )})\r\n                        \r\n                    } \r\n                    \r\n                    <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        makeComment(e.target[0].value, item._id)  \r\n                        e.target.reset();\r\n                    }}>\r\n                    <input type='text' placeholder='comment below' />\r\n                    <button type='reset' style={{display:'none'}}>comment</button>\r\n                    </form>\r\n                   \r\n                </div>\r\n            </div>\r\n                )\r\n            })\r\n        }\r\n            \r\n            \r\n        </div> : <div class=\"sk-chase\" style={{margin:'188px 13px 87px 682px'}}>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n</div> }\r\n        </div>\r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nexport default Home\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Signin.js",["77"],"import React, {useState, useContext} from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport {UserContext} from '../../App';\r\n\r\nfunction Signin() {\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const history = useHistory();\r\n    const [password, setPassword] = useState('');\r\n    const [email, setEmail] = useState('');\r\n\r\n    const PostData = () => {\r\n        if(!/^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/.test(email)){\r\n            return M.toast({html: 'invalid email', classes: '#616161 grey darken-2'});\r\n        }\r\n        fetch('/signin', {\r\n            method: 'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                email\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                M.toast({html: data.error, classes: '#616161 grey darken-2'})\r\n            }\r\n            else {\r\n                localStorage.setItem('jwt',data.token);\r\n                localStorage.setItem('user', JSON.stringify(data.user));\r\n                dispatch({type:\"USER\", payload: data.user})\r\n                // M.toast({html: 'Signed in Successfully', classes: '#616161 grey darken-2'})\r\n                history.push('/')\r\n            }\r\n            \r\n        })\r\n    }\r\n    return (\r\n        <div className='my-gradient'>\r\n        \r\n        <div className='myCard'>\r\n             <div className='card auth-card input-field'>\r\n             <h2>Instagram</h2>\r\n             <input \r\n            type='text'\r\n            placeholder='Enter your email'\r\n            value = {email}\r\n            onChange = {(e) => setEmail(e.target.value)}\r\n        />\r\n        <input \r\n            type='password'\r\n            placeholder='password'\r\n            value = {password}\r\n            onChange = {(e) => setPassword(e.target.value)}\r\n        />\r\n             <button\r\n              onClick = {() => PostData()}\r\n              className= 'btn waves-effect waves #1976d2 blue darken-2'\r\n              >Sign In</button>\r\n\r\n             <h6><Link to='/signup'><u>Don't have an account ?</u></Link></h6>\r\n             <p><Link to='/reset'><u>forgot password</u></Link></p>\r\n             </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Signin\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Profile.js",["78","79","80"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CameraAltIcon from '@material-ui/icons/CameraAlt';\r\nimport { IconButton } from '@material-ui/core';\r\nfunction Profile() {\r\n    const [mypics, setPics] = useState([]);\r\n    const [image, setImage] = useState('');\r\n    const [url, setUrl] = useState(undefined);\r\n    const {state, dispatch} = useContext(UserContext)\r\n    const inputRef = React.useRef();\r\n    const triggerFileSelectPopup = () => inputRef.current.click();\r\n    const onSelectFile = (event) => {\r\n\t\tif (event.target.files && event.target.files.length > 0) {\r\n\t\t\tconst reader = new FileReader();\r\n\t\t\treader.readAsDataURL(event.target.files[0]);\r\n\t\t\treader.addEventListener(\"load\", () => {\r\n\t\t\t\tsetImage(reader.result);\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n    useEffect(() => {\r\n        fetch('/myPost', {\r\n            headers: {\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setPics(result.myPost)\r\n        })\r\n    }, [])\r\n   \r\n    useEffect(() => {\r\n        if(image){\r\n          const data = new FormData()\r\n                data.append('file', image)\r\n                data.append('upload_preset', 'insta_clone')\r\n                data.append('cloud_name', 'cqn')\r\n      fetch('https://api.cloudinary.com/v1_1/cqn/image/upload', {\r\n        method: 'post',\r\n        body:data\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data => {\r\n        setUrl(data.url)\r\n        // localStorage.setItem('user', JSON.stringify({...state, pic:data.url}))\r\n        // dispatch({type:'UPDATEPIC', payload:data.url})\r\n        fetch('/updatePic',{\r\n            method:'put',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                pic:data.url\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            localStorage.setItem('user', JSON.stringify({...state, pic:result.pic}))\r\n            dispatch({type:'UPDATEPIC', payload:result.pic})\r\n            // console.log(result);\r\n        })\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n        }\r\n    }, [image])\r\n\r\n    // const updatePhoto = (file) => {\r\n    //     setImage(file)\r\n        \r\n    // }\r\n    return (\r\n        \r\n        <div style={{maxWidth:'550px', margin:'0px auto'}}>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                margin: '18px 0px',\r\n                borderBottom: '1px solid grey'\r\n            }}>\r\n                <div>\r\n                   \r\n                     \r\n                \r\n                     <img style={{width:'160px', height:'160px', borderRadius: '80px'}}\r\n                     src={state ? state.pic : ''}\r\n                     alt = 'DP'/>\r\n                     \r\n                \r\n                </div>\r\n                <div>\r\n                    <h4>{state ? state.name:'loading'}</h4>\r\n                    <h4>{state ? state.email:'loading'}</h4>\r\n                    <div style = {{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        width: '110%'\r\n                    }}>\r\n                        <h6>{mypics.length} Posts</h6>\r\n                        <h6>{state ? state.followers.length : '0'} Followers</h6>\r\n                        <h6>{state ? state.following.length : '0'} Following</h6>\r\n                        \r\n                        \r\n                    </div>\r\n                    {/* <div className=\"file-field input-field\">\r\n      <div className=\"btn #1976d2 blue darken-2\">\r\n        <span>Upload profile pic</span>\r\n        <input type=\"file\" \r\n          onChange={(e) => updatePhoto(e.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate\" type=\"text\" />\r\n      </div>\r\n    </div> */}\r\n    <div className='container-buttons'>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype='file'\r\n\t\t\t\t\taccept='image/*'\r\n\t\t\t\t\tref={inputRef}\r\n\t\t\t\t\tonChange={onSelectFile}\r\n\t\t\t\t\tstyle={{ display: \"none\" }}\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n                \tvariant='contained'\r\n                    color='primary'\r\n\t\t\t\t\tonClick={triggerFileSelectPopup}\r\n\t\t\t\t\tstyle={{ margin: \"10px\" }}\r\n\t\t\t\t>\r\n\t\t\t\t\tChange Profile Pic <CameraAltIcon />\r\n\t\t\t\t</Button>\r\n                </div>\r\n        \r\n    \r\n                </div>\r\n                \r\n            </div>\r\n            \r\n            \r\n\r\n        <div className='gallery'>\r\n        {\r\n            mypics.map(item=>{\r\n                return (\r\n                    <img key={item._id} className='item' src={item.photo} alt={item.title} />\r\n                )\r\n            })\r\n        }\r\n            \r\n        </div>\r\n        \r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\reducers\\userReducer.js",[],["81","82"],"E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\CreatePost.js",["83"],"import React, {useState, useEffect} from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nfunction CreatePost() {\r\n  const history = useHistory();\r\n  const [title, setTitle] = useState('');\r\n  const [body, setBody] = useState('');\r\n  const [image, setImage] = useState('');\r\n  const [url, setUrl] = useState('');\r\n  \r\n  useEffect(() => {\r\n    if(url){\r\n    fetch('/createPost', {\r\n      method: 'post',\r\n      headers:{\r\n          'Content-Type':'application/json',\r\n          'Authorization': 'Bearer '+localStorage.getItem('jwt')\r\n      },\r\n      body:JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url\r\n      })\r\n  }).then(res => res.json())\r\n  .then(data => {\r\n      if(data.error){\r\n          M.toast({html: data.error, classes: '#616161 grey darken-2'})\r\n      }\r\n      else {\r\n          M.toast({html: 'Post created', classes: '#616161 grey darken-2'})\r\n          history.push('/')\r\n      }\r\n      \r\n  })\r\n}\r\n  }, [url])\r\n  const PostDetails = () => {\r\n      const data = new FormData()\r\n      data.append('file', image)\r\n      data.append('upload_preset', 'insta_clone')\r\n      data.append('cloud_name', 'cqn')\r\n\r\n      fetch('https://api.cloudinary.com/v1_1/cqn/image/upload', {\r\n        method: 'post',\r\n        body:data\r\n      })\r\n      .then(res=>res.json())\r\n      .then(data => {\r\n        setUrl(data.url)\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      })\r\n\r\n      \r\n  }\r\n    return (\r\n      <>\r\n      \r\n      <div className='my-gradient'>\r\n        <div className='card input-filed' style={{\r\n            margin: '30px auto',\r\n            maxWidth: '500px',\r\n            padding: '20px',\r\n            textAlign: 'center'\r\n        }}>\r\n            <input\r\n             type='text'\r\n              placeholder='Title'\r\n              value={title} \r\n              onChange={(e) => setTitle(e.target.value)}\r\n              />\r\n            <input\r\n             type='text'\r\n              placeholder='Body'\r\n              value={body}\r\n              onChange={(e) => setBody(e.target.value)}\r\n               />\r\n            <div className=\"file-field input-field\">\r\n      <div className=\"btn #1976d2 blue darken-2\">\r\n        <span>Upload photo</span>\r\n        <input type=\"file\" \r\n          onChange={(e) => setImage(e.target.files[0])}\r\n        />\r\n      </div>\r\n      <div className=\"file-path-wrapper\">\r\n        <input className=\"file-path validate\" type=\"text\" />\r\n      </div>\r\n    </div>\r\n            <button\r\n            onClick={() => PostDetails()}\r\n             className= 'btn waves-effect waves-light #1976d2 blue darken-2'\r\n             >Upload post</button>\r\n        </div>\r\n        </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CreatePost\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\SubscribedUser.js",["84"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport {UserContext} from '../../App'\r\nimport M from 'materialize-css'\r\nimport Tippy from '@tippyjs/react';\r\nimport \"tippy.js/dist/tippy.css\";\r\nimport 'tippy.js/themes/light.css';\r\nimport 'tippy.js/animations/shift-away.css';\r\nfunction Home() {\r\n    const [data, setData] = useState([]);\r\n    const {state, dispatch} = useContext(UserContext)\r\n    useEffect(() => {\r\n        fetch('/getsubpost', {\r\n            headers: {\r\n                'Authorization' : 'Bearer '+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            \r\n            setData(result.posts)\r\n        })\r\n    })\r\n    const likePost = (id)=>{\r\n        fetch('/like',{\r\n            method:\"put\",\r\n            headers:{\r\n                \"Content-Type\":\"application/json\",\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n        //  console.log(result)\r\n        const newData = data.map(item => {\r\n            if(item._id === result._id){\r\n                return result\r\n            }else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n          \r\n        })\r\n  }\r\n    const unlikePost = (id) => {\r\n        fetch('/unlike', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization' : 'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                postId:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n        const newData = data.map(item => {\r\n            if(item._id === result._id){\r\n                return result\r\n            }else {\r\n                return item\r\n            }\r\n        })\r\n        setData(newData)\r\n        })\r\n    }\r\n    const makeComment = (text, postId) => {\r\n        fetch('/comment', {\r\n            method: 'put',\r\n            headers: {\r\n              \"Content-Type\":\"application/json\",\r\n              \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n            },\r\n            body:JSON.stringify({\r\n              text,  \r\n              postId\r\n          })\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            if(result.errmessage){\r\n                M.toast({html: result.errmessage, classes:'#e53935 red darken-1'})\r\n            }\r\n            const newData = data.map(item => {\r\n                if(item._id === result._id){\r\n                    return result\r\n                }else {\r\n                    return item\r\n                }\r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const deletePost = (postid) => {\r\n        fetch(`/deletePost/${postid}`, {\r\n            method:'delete',\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              }\r\n        }).then(res=>res.json())\r\n        .then(result => {\r\n            // console.log(result);\r\n            const newData = data.filter(item => {\r\n                return item._id !== result._id\r\n            })\r\n            setData(newData)\r\n        })\r\n    }\r\n    \r\n    const deleteComment = (postId, commentId) => {\r\n        fetch(`deleteComment/${postId}/${commentId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                \"Authorization\":\"Bearer \"+localStorage.getItem(\"jwt\")\r\n              }\r\n        }).then(res => res.json())\r\n        .then(result => {\r\n            console.log(result);\r\n            const newData = data.map(item => {\r\n                if(item._id === result._id){\r\n                    return result\r\n                } else {\r\n                    return item\r\n                } \r\n            })\r\n            setData(newData)\r\n        }).catch(err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n    \r\n    return (\r\n\r\n        <div className='home'>\r\n        {\r\n           \r\n            data.map(item => {\r\n                return (\r\n                    <div className='card home-card' key={item._id}>\r\n                <h5 style={{padding:'5px'}}><Link to={item.postedBy._id !== state._id ? '/profile/'+item.postedBy._id : '/profile'}>\r\n                    <div className='flex-container'>\r\n                <div className='flex-child'>\r\n                <img src={item.postedBy.pic} \r\n                style={{width:'65px', height:'65px', borderRadius:'60px'}} \r\n                alt='dp'>\r\n                </img>\r\n                </div>\r\n                <div className=\"flex-child\">\r\n                <h5>\r\n                {item.postedBy.name}\r\n                </h5>\r\n                </div>\r\n                </div>\r\n                </Link> {\r\n                    item.postedBy._id === state._id && <i className=\"material-icons\" style={{float:'right', cursor:'pointer', position: 'absolute', top: '10px', right: '10px'}}\r\n                    onClick={() => deletePost(item._id)}\r\n                    >delete</i>\r\n                } \r\n                </h5>\r\n                <div className='card-image'>\r\n                    <img src={item.photo} alt='home post'/>\r\n                </div>\r\n                <div className='card-content'>\r\n                <i className=\"material-icons\"style={{color:'red'}}>favorite</i>\r\n                {\r\n                    (item.like.includes(state._id))\r\n                    ? <i className=\"material-icons\"\r\n                onClick={() => {unlikePost(item._id)}}\r\n                style={{cursor:'pointer'}}\r\n                >thumb_down</i>\r\n                : <i className=\"material-icons\"\r\n                onClick={() => {likePost(item._id)}}\r\n                style={{cursor:'pointer'}}\r\n                >thumb_up</i>\r\n                }\r\n                <h6>{item.like.length} likes</h6>\r\n                    <h5>{item.title}</h5>\r\n                    <p>{item.body}</p>\r\n                    {\r\n                        item.comments.map(record => {\r\n                        \r\n                            return(\r\n                                <h6 key={record._id} className='comment-wrap'>\r\n                                <Tippy \r\n                                animation={'shift-away'} \r\n                                theme={'light'} \r\n                                content={<div>\r\n                                <div style={{display:'flex'}}>\r\n                    <img alt='dp' \r\n                     src={record.picture} \r\n                     style={{width:'70px', height:'70px', borderRadius:'60px'}} >\r\n                     </img>\r\n                     \r\n                      <span style={{ fontWeight: \"600\", fontSize:'22px', margin:'4px 8px 0 10px' }}>\r\n                     {record.postedBy[0].name} \r\n                      </span>\r\n                      </div>\r\n                       <div style={{display:'flex', fontSize:'20px', fontWeight:'500px'}}>{record.followers} Followers \r\n                       {'   '}{record.following} Following</div>\r\n                                </div>\r\n                                }>\r\n                    <Link to={record.postedBy._id !== state._id ? '/profile/'+record.postedBy[0]._id : '/profile'}>\r\n                      <div style={{display:'flex'}}>\r\n                    <img alt='dp' \r\n                     src={record.picture} \r\n                     style={{width:'30px', height:'30px', borderRadius:'60px'}} >\r\n                     </img>\r\n                     \r\n                      <span style={{ fontWeight: \"600\", fontSize:'22px', margin:'4px 8px 0 10px' }}>\r\n                     {record.postedBy[0].name} \r\n                      </span>\r\n                      \r\n                      <p style={{margin:'5px 0px 0px 0px'}}>{record.text}</p>\r\n                       </div>\r\n                    </Link>\r\n  </Tippy> \r\n                      \r\n                      {(item.postedBy._id || record.postedBy._id) ===\r\n                        state._id && (\r\n                        <i\r\n                          className=\"material-icons\"\r\n                          style={{\r\n                            float: \"right\",\r\n                            color:'red',\r\n                            cursor:'pointer',\r\n                            margin:'-22px 0px 0px 0px'\r\n                          }}\r\n                          onClick={() => deleteComment(item._id, record._id)}\r\n                        >\r\n                          delete\r\n                        </i>\r\n                      )}\r\n                    </h6>\r\n                        )})\r\n                        \r\n                    } \r\n                    \r\n                    <form onSubmit={(e) => {\r\n                        e.preventDefault()\r\n                        makeComment(e.target[0].value, item._id)  \r\n                        e.target.reset();\r\n                    }}>\r\n                    <input type='text' placeholder='comment below' />\r\n                    <button type='reset' style={{display:'none'}}>comment</button>\r\n                    </form>\r\n                   \r\n                </div>\r\n            </div>\r\n                )\r\n            })\r\n        }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\UserProfile.js",["85"],"import React, {useState, useEffect, useContext} from 'react'\r\nimport {UserContext} from '../../App'\r\nimport {useParams} from 'react-router-dom'\r\nimport '../../App.css'\r\nfunction Profile() {\r\n    const [userProfile, setProfile] = useState(null);\r\n   \r\n    const {state, dispatch} = useContext(UserContext)\r\n    const {userid} = useParams()\r\n    const [showFollow, setShowFollow] = useState(state ? !state.following.includes(userid) : true)\r\n    useEffect(() => {\r\n        fetch(`/user/${userid}`, {\r\n            method:'get',\r\n            headers: {\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            // console.log(result);\r\n            setProfile(result)\r\n        })\r\n    }, [])\r\n   \r\n    const followers = () => { \r\n        fetch('/follow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                followId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            // console.log(data);\r\n            dispatch({type:'UPDATE', payload:{following:data.following, followers:data.followers}})\r\n            localStorage.setItem('user', JSON.stringify(data))\r\n            setProfile((prevState) => {\r\n               return{ ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:[...prevState.user.followers, data._id]\r\n                        }\r\n            }\r\n            })\r\n            setShowFollow(false)\r\n        })\r\n    }\r\n    const unfollowers = () => { \r\n        fetch('/unfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type':'application/json',\r\n                'Authorization':'Bearer '+localStorage.getItem('jwt')\r\n            },\r\n            body:JSON.stringify({\r\n                unfollowId:userid\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            // console.log(data);\r\n            dispatch({type:'UPDATE', payload:{following:data.following, followers:data.followers}})\r\n            localStorage.setItem('user', JSON.stringify(data))\r\n            setProfile((prevState) => {\r\n                const newFollower = prevState.user.followers.filter(item=>item !== data._id)\r\n               return{\r\n                    ...prevState,\r\n                        user:{\r\n                            ...prevState.user,\r\n                            followers:newFollower\r\n                        }\r\n            }\r\n            })\r\n            setShowFollow(true)\r\n        })\r\n    }\r\n    return (\r\n        <>\r\n        {userProfile ? \r\n            <div style={{maxWidth:'550px', margin:'0px auto'}}>\r\n            <div style={{\r\n                display: 'flex',\r\n                justifyContent: 'space-around',\r\n                margin: '18px 0px',\r\n                borderBottom: '1px solid grey'\r\n            }}>\r\n                <div>\r\n                    <img style={{width:'160px', height:'160px', borderRadius: '80px'}}\r\n                     src={userProfile.user.pic}\r\n                     alt = 'DP'/>\r\n                </div>\r\n                <div>\r\n                    <h4>{(userProfile.user.name)}</h4>\r\n                    <h5>{(userProfile.user.email)}</h5>\r\n                    \r\n                    <div style = {{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-between',\r\n                        width: '110%'\r\n                    }}>\r\n                        <h6>{(userProfile.posts.length)} Posts</h6>\r\n                        <h6>{userProfile.user.followers.length} Followers</h6>\r\n                        <h6>{userProfile.user.following.length} Following</h6>\r\n                        \r\n                    </div>\r\n                    {\r\n                    showFollow ?\r\n                    <button\r\n              onClick = {() => followers()}\r\n              className= 'btn waves-effect waves #1976d2 blue darken-2'\r\n              style={{margin:'13px'}}\r\n              >Follow</button>\r\n                :\r\n                <button\r\n              onClick = {() => unfollowers()}\r\n              className= 'btn waves-effect waves #1976d2 blue darken-2'\r\n              style={{margin:'13px'}}\r\n              >UnFollow</button>\r\n\r\n                }\r\n                </div>\r\n               \r\n                \r\n            </div>\r\n        \r\n        <div className='gallery'>\r\n        {\r\n            userProfile.posts.map(item=>{\r\n                return (\r\n                    <img key={item._id} className='item' src={item.photo} alt={item.title} />\r\n                )\r\n            })\r\n        }\r\n            \r\n        </div>\r\n        </div>\r\n         : <div class=\"sk-chase\" style={{margin:'211px 13px 87px 378px'}}>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n  <div class=\"sk-chase-dot\"></div>\r\n</div> }\r\n       \r\n</>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\Reset.js",[],"E:\\Web Development\\instagram_clone\\server\\client\\src\\components\\screens\\NewPassword.js",["86"],"import React, {useState} from 'react'\r\nimport { Link, useHistory, useParams } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nfunction NewPassword() {\r\n    const history = useHistory();\r\n    const [password, setPassword] = useState('');\r\n    const {token} = useParams()\r\n    const PostData = () => {\r\n        \r\n        fetch('/new-password', {\r\n            method: 'post',\r\n            headers:{\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                password,\r\n                token\r\n            })\r\n        }).then(res => res.json())\r\n        .then(data => {\r\n            if(data.error){\r\n                M.toast({html: data.error, classes: '#616161 grey darken-2'})\r\n            }\r\n            else {\r\n                M.toast({html: data.message, classes: '#616161 grey darken-2'})\r\n                history.push('/signin')\r\n            }\r\n            \r\n        })\r\n    }\r\n    return (\r\n        <div className='my-gradient'>\r\n        \r\n        <div className='myCard'>\r\n             <div className='card auth-card input-field'>\r\n             <h2>Instagram</h2>\r\n             \r\n        <input \r\n            type='password'\r\n            placeholder='Enter new password'\r\n            value = {password}\r\n            onChange = {(e) => setPassword(e.target.value)}\r\n        />\r\n             <button\r\n              onClick = {() => PostData()}\r\n              className= 'btn waves-effect waves #1976d2 blue darken-2'\r\n              >Update Password</button>\r\n             </div>\r\n        </div>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewPassword\r\n",{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","severity":1,"message":"92","line":21,"column":10,"nodeType":"93","messageId":"94","endLine":21,"endColumn":15},{"ruleId":"95","severity":1,"message":"96","line":30,"column":5,"nodeType":"97","endLine":30,"endColumn":7,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":14,"column":8,"nodeType":"97","endLine":14,"endColumn":13,"suggestions":"100"},{"ruleId":"91","severity":1,"message":"101","line":14,"column":12,"nodeType":"93","messageId":"94","endLine":14,"endColumn":15},{"ruleId":"91","severity":1,"message":"102","line":14,"column":17,"nodeType":"93","messageId":"94","endLine":14,"endColumn":23},{"ruleId":"91","severity":1,"message":"103","line":15,"column":19,"nodeType":"93","messageId":"94","endLine":15,"endColumn":27},{"ruleId":"91","severity":1,"message":"92","line":7,"column":12,"nodeType":"93","messageId":"94","endLine":7,"endColumn":17},{"ruleId":"91","severity":1,"message":"104","line":5,"column":10,"nodeType":"93","messageId":"94","endLine":5,"endColumn":20},{"ruleId":"91","severity":1,"message":"101","line":9,"column":12,"nodeType":"93","messageId":"94","endLine":9,"endColumn":15},{"ruleId":"95","severity":1,"message":"105","line":68,"column":8,"nodeType":"97","endLine":68,"endColumn":15,"suggestions":"106"},{"ruleId":"87","replacedBy":"107"},{"ruleId":"89","replacedBy":"108"},{"ruleId":"95","severity":1,"message":"109","line":36,"column":6,"nodeType":"97","endLine":36,"endColumn":11,"suggestions":"110"},{"ruleId":"91","severity":1,"message":"103","line":11,"column":19,"nodeType":"93","messageId":"94","endLine":11,"endColumn":27},{"ruleId":"95","severity":1,"message":"111","line":22,"column":8,"nodeType":"97","endLine":22,"endColumn":10,"suggestions":"112"},{"ruleId":"91","severity":1,"message":"113","line":2,"column":10,"nodeType":"93","messageId":"94","endLine":2,"endColumn":14},"no-native-reassign",["114"],"no-negated-in-lhs",["115"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["116"],"React Hook useEffect has a missing dependency: 'uploadFields'. Either include it or remove the dependency array.",["117"],"'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","'dispatch' is assigned a value but never used.","'IconButton' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["118"],["114"],["115"],"React Hook useEffect has missing dependencies: 'body', 'history', and 'title'. Either include them or remove the dependency array.",["119"],"React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["120"],"'Link' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"121","fix":"122"},{"desc":"123","fix":"124"},{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},"Update the dependencies array to be: [dispatch, history]",{"range":"131","text":"132"},"Update the dependencies array to be: [uploadFields, url]",{"range":"133","text":"134"},"Update the dependencies array to be: [dispatch, image, state]",{"range":"135","text":"136"},"Update the dependencies array to be: [body, history, title, url]",{"range":"137","text":"138"},"Update the dependencies array to be: [userid]",{"range":"139","text":"140"},[1171,1173],"[dispatch, history]",[480,485],"[uploadFields, url]",[2367,2374],"[dispatch, image, state]",[982,987],"[body, history, title, url]",[783,785],"[userid]"]